@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":TeachWhatParser" as TeachWhatParser LOGIC_COLOR
participant ":AddLessonCommandParser" as AddLessonCommandParser LOGIC_COLOR
participant ":AddLessonCommand" as AddLessonCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
participant ":Lesson" as Lesson LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute(**userInput**)
note left of LogicManager
**userInput = ** "addlesson
-n Sec 2 Biology Lesson
-s Biology -a Blk 11 Ang Mo Kio Street 74, #11-04
-d 17-04-2022 -t 18:00 -h 1"
end note
activate LogicManager

ref over TeachWhatParser, Lesson
parse add lesson command
end ref

LogicManager -> AddLessonCommand : execute()
activate AddLessonCommand

AddLessonCommand -> Model : addLesson(lessonToBeAdded)
activate Model

alt does not conflict with any existing lessons
    AddLessonCommand <-- Model
    AddLessonCommand -> Model : setSelectedLesson(lessonToBeAdded)

    create CommandResult
    AddLessonCommand -> CommandResult
    activate CommandResult
    CommandResult --> AddLessonCommand : commandResult
    deactivate CommandResult

    LogicManager <-- AddLessonCommand : commandResult

    [<--LogicManager : commandResult
else else
     AddLessonCommand <-- Model : conflictsWithLessonException
     deactivate Model
     LogicManager <-- AddLessonCommand : commandException
     deactivate AddLessonCommand

     [<--LogicManager : commandException
     deactivate LogicManager
end
note left of LogicManager
        refer to the section __**Determining if a lesson clashes with any existing lessons**__
        for how //TeachWhat!// checks if the lesson to be added does not clash
        with any existing lessons
        end note
@enduml
